@model SaajeApplic.Models.ViewModel.ProjetCreateVM


@* @{
    ViewData["Title"] = "Edit";
} *@

<div class="card w-50" style="margin:auto">
    <div class="card-header bg-info text-white" style="font-weight:bold">
        <h1><i class="fa-regular fa-square-plus"></i> Apporter des Modifications </h1>
    </div>

        <form asp-action="Edit" id="myFormEdit">
            <div class="card-body" >
            <input type="hidden" asp-for="ProjetId" />
                <div class="mb-10">

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    
                    <div class="form-group">
                        <label asp-for="ProjetName" class="control-label"></label>
                        <textarea asp-for="ProjetName" class="form-control" cols="50" rows="2"></textarea>
                        <span asp-validation-for="ProjetName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="UserId" class="control-label">porteur</label>
                        <select class="form-control" id="UserId" name="UserId">
                            @foreach (var user in Model.UsersList)
                            {
                                <option value="@user.Value">@user.Text</option>
                            }
                        </select>
                    </div> 
                    <div class="form-group">
                        <label asp-for="PlanAction" class="control-label"></label>
                        <textarea asp-for="PlanAction" class="form-control" cols="50" rows="2"></textarea>
                        <span asp-validation-for="PlanAction" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="DateDebut" class="control-label"></label>
                        <input asp-for="DateDebut" id="startDate" class="form-control" />
                        <span asp-validation-for="DateDebut" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="DateLine" class="control-label"></label>
                        <input asp-for="DateLine" id="endDate" class="form-control" />
                        <span asp-validation-for="DateLine" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="EtatProjet" class="control-label"></label>
                        <select asp-for="EtatProjet" class="form-control form-select" aria-label="Default select example">
                            <option value="En cours" >En cours</option>
                            <option value="Clos" >Clos </option>
                            <option value="En attente de nouveau élément">En attente de nouveau élément </option>
                        </select>
                    
                        <span asp-validation-for="EtatProjet" class="text-danger"></span>
                    </div>
           
                     
                </div>
           </div>
           <div class="card-footer text-muted">
                <div class="form-group">
                    <div class="btn-group" role="group">
                        <button type="submit" class="btn btn-success m-2 p-2"><i class="fa-sharp fa-regular fa-circle-check"></i> Sauvegarder</button>
                        <a asp-action="Index" class="btn btn-danger m-2 p-2"><i class="fa-solid fa-xmark"></i> Annuler</a>
                    </div>

                </div>
           </div>
        </form>
    
</div>





@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

        function validateDates(startDate, endDate) {
            if (startDate >= endDate) {
                // Afficher un message d'erreur
                alert("La date de début doit être inférieure au Delais.");
                return false;
            }
            return true;
        }

        // Ecouter l'événement submit du formulaire
        document.getElementById('myFormEdit').addEventListener('submit', function (event) {
            // Récupérer les valeurs des champs date de début et date de fin
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            // Valider les dates
            if (!validateDates(startDate, endDate)) {
                // Empêcher la soumission du formulaire
                event.preventDefault();
            }
        });
    
    </script>
}
